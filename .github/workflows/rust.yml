name: Build Cyber GPU Test (ARM64)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # üß† –í–º–∏–∫–∞—î–º–æ –µ–º—É–ª—è—Ü—ñ—é ARM64
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      # üíæ –ö–µ—à Docker-—à–∞—Ä—ñ–≤
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image (ARM64)
        run: |
          docker buildx create --use --driver docker-container
          docker buildx build \
            --platform linux/arm64 \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache,mode=max \
            -t cyber-gpu-build .

      - name: Extract binary
        run: |
          docker create --name temp cyber-gpu-build
          docker cp temp:/cyber-gpu-test/target/aarch64-unknown-linux-gnu/release/cyber-gpu-test ./cyber-gpu-test
          docker rm temp

      - name: Archive binary to .tar.gz
        run: tar -czvf cyber-gpu-test.tar.gz cyber-gpu-test

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: cyber-gpu-test
          path: ./cyber-gpu-test

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: cyber-gpu-test-archive
          path: ./cyber-gpu-test.tar.gz
